name: Build Datalevin Binaries

on:
  release:
    types: 
      - published

jobs:
  jvm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 

      - name: Run tests
        run: |
          lein test

      - name: Build uberjar
        run: |
          lein uberjar

      - name: Get version
        id: get_version
        run: echo ::set-output name=version::${{ github.event.release.tag_name }}

      - name: Get upload_url
        run: echo ::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}
        id: release

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        with:
          asset_name: datalevin-${{ steps.get_version.outputs.version }}-standalone.jar
          asset_path: target/main.uberjar.jar
          upload_url: ${{ steps.release.outputs.upload_url }}

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 

      - name: Setup Graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: '21.0.0.java11'

      - name: Install Native Image
        run: |
          gu install native-image

      - name: Install LMDB
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: sudo apt install liblmdb-dev

      - name: Build datalevin
        run: |
          gu install native-image
          cd native
          bash script/compile

      - name: Run native tests
        run: |
          native/dtlv-test

      - name: Get version
        id: get_version
        run: echo ::set-output name=version::${{ github.event.release.tag_name }}

      - name: Get upload_url
        run: echo ::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}
        id: release

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        with:
          asset_name: datalevin-${{ steps.get_version.outputs.version }}-linux-amd64.zip
          asset_path: native/dtlv
          asset_content_type: application/zip
          upload_url: ${{ steps.release.outputs.upload_url }}

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2 

      - name: Setup Graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: '21.0.0.java11'

      - name: Install Native Image
        run: |
          gu install native-image

      - name: Install LMDB
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: brew install lmdb leiningen

      - name: Build datalevin
        run: |
          gu install native-image
          cd native
          bash script/compile

      - name: Run native tests
        run: |
          native/dtlv-test

      - name: Get version
        id: get_version
        run: echo ::set-output name=version::${{ github.event.release.tag_name }}

      - name: Get upload_url
        run: echo ::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}
        id: release

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        with:
          asset_name: datalevin-${{ steps.get_version.outputs.version }}-macos-amd64.zip
          asset_path: native/dtlv
          asset_content_type: application/zip
          upload_url: ${{ steps.release.outputs.upload_url }}

